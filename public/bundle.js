(()=>{"use strict";const e=document.getElementById("game"),t=e.getContext("2d"),n=document.getElementById("score__counter"),l=document.getElementById("mode"),o=document.getElementById("mode__state"),d=document.getElementById("score__result");console.log(d.textContent);const c=16;let s=0,r=4,x=0,y=!1;const a={x:160,y:160,dx:c,dy:0,cells:[],maxCells:4},i={x:320,y:320};function m(e,t){return Math.floor(Math.random()*(t-e))+e}function u(){i.x=m(0,25)*c,i.y=m(0,25)*c}function h(){a.x=160,a.y=160,a.cells=[],a.maxCells=4,a.dx=c,a.dy=0,x=0,n.textContent=x.toString(),u()}function f(t,n,l){o.textContent=t,e.classList.add(n),e.classList.remove(l)}document.addEventListener("keydown",(e=>{switch(e.which){case 16:r=2;break;case 27:h();break;case 37:0===a.dx&&(a.dx=-16,a.dy=0);break;case 38:0===a.dy&&(a.dy=-16,a.dx=0);break;case 39:0===a.dx&&(a.dx=c,a.dy=0);break;case 40:0===a.dy&&(a.dy=c,a.dx=0)}})),document.addEventListener("keyup",(e=>{16===e.which&&(r=4)})),l.addEventListener("click",(()=>{y=!y,y?f("on","borders_on","borders_off"):f("off","borders_off","borders_on"),h()})),requestAnimationFrame((function l(){requestAnimationFrame(l),++s<r||(s=0,t.clearRect(0,0,e.width,e.height),a.x+=a.dx,a.y+=a.dy,a.x<0?y?h():a.x=e.width-c:a.x>=e.width&&(y?h():a.x=0),a.y<0?y?h():a.y=e.height-c:a.y>=e.height&&(y?h():a.y=0),a.cells.unshift({x:a.x,y:a.y}),a.cells.length>a.maxCells&&a.cells.pop(),t.fillStyle="red",t.fillRect(i.x,i.y,15,15),t.fillStyle="green",a.cells.forEach(((e,l)=>{t.fillRect(e.x,e.y,15,15),e.x===i.x&&e.y===i.y&&(a.maxCells++,u(),x++,n.textContent=x.toString());for(let t=l+1;t<a.cells.length;t++)e.x===a.cells[t].x&&e.y===a.cells[t].y&&(o=Number(n.textContent),null!==d&&o>Number(d.textContent)&&(d.textContent=String(o)),h());var o})))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,